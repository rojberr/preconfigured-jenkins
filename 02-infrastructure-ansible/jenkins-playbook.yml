---
# Usage:
#
# > ansible-playbook jenkins-playbook.yml
#
# 1) Upload DO_API_TOKEN=<digital ocean api key>
#
# 2) Create ssh keypair with 'ssh-keygen' and copy it to this folder
# as: tf-digitalocean.pub, tf-digitalocean
#
#
# Ansible Play 1
#
# Prepare and create the Digital Ocean Droplet using ENV DO_API_TOKEN
#
- name: digital-ocean-creation
  hosts: localhost
  remote_user: user
  vars:
    droplet_name: digitaloceanjenkins
    digital_ocean_token: "{{ lookup('ansible.builtin.env','DO_API_TOKEN') }}"
    droplet_size: s-1vcpu-2gb
    droplet_region: fra1
    droplet_image: ubuntu-18-04-x64
    droplet_timeout: 600

  tasks:

  - name: "add public ssh key to digitalocean account"
    digital_ocean_sshkey:
      name: "pubkey-digitalocean"
      oauth_token: "{{ digital_ocean_token }}"
      ssh_pub_key: "{{ lookup('file', 'tf-digitalocean.pub') }}"
      state: present
    register: sshkey_result

  - name: Create a new droplet assigning the key
    digital_ocean_droplet:
      name: "{{ droplet_name }}"
      state: present
      oauth_token: "{{ digital_ocean_token }}"
      size: "{{ droplet_size }}"
      region: "{{ droplet_region }}"
      image: "{{ droplet_image }}"
      wait_timeout: "{{ droplet_timeout }}"
      unique_name: yes
      ssh_keys: ["{{ sshkey_result.data.ssh_key.id }}"]
    register: my_droplet

  - debug:
      msg: "ID is {{ my_droplet.data.droplet.id }}, IP is {{ my_droplet.data.droplet.networks.v4.0.ip_address }}"

  - name: Ensure a droplet is present
    digital_ocean_droplet:
      state: present
      id: "{{ my_droplet.data.droplet.id }}"
      name: "{{ droplet_name }}"
      oauth_token: "{{ digital_ocean_token }}"
      size: "{{ droplet_size }}"
      region: "{{ droplet_region }}"
      image: "{{ droplet_image }}"
      wait_timeout: "{{ droplet_timeout }}"

  - add_host:
      name: digitaloceanjenkins
      ansible_host: "{{ my_droplet.data.droplet.networks.v4.0.ip_address }}"


# Ansible Play 2
#
# Install Docker service on the newly created droplet
#
- name: "Install docker"
  hosts: digitaloceanjenkins
  remote_user: root
  become: yes

  tasks:

  # Install Docker
  # --------------
  - name: install prerequisites
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      update_cache: yes

  - name: add apt-key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg

  - name: add docker repo
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable

  - name: install docker
    apt:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      update_cache: yes

  - name: add userpermissions
    shell: "usermod -aG docker root"

  # Installs Docker SDK
  # -------------------
  - name: install python package manager
    apt:
      name: python3-pip

  - name: install python sdk
    become_user: root
    pip:
      name:
        - docker
        - docker-compose


# Ansible Play 3
#
# Deploy Jenkins user image from https://hub.docker.com/repository/docker/rojberr/digitaloceanjenkins
#
- name: "Deploy jenkins Docker image"
  hosts: digitaloceanjenkins
  remote_user: root

  tasks:

  # Deploy rojberr/digitaloceanjenkins Jenkins Docker image
  # -------------------------------------------------------
  - name: Deploy Docker Jenkins image
    community.docker.docker_container:
      name: digitaloceanjenkins
      image: rojberr/digitaloceanjenkins:1
      ports:
        - "8080:8080"
        - "50000:50000"
      volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"